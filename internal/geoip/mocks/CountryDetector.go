// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// CountryDetector is an autogenerated mock type for the CountryDetector type
type CountryDetector struct {
	mock.Mock
}

// CountryByIP provides a mock function with given fields: ctx, clientIP
func (_m *CountryDetector) CountryByIP(ctx context.Context, clientIP string) (string, error) {
	ret := _m.Called(ctx, clientIP)

	var r0 string
	if rf, ok := ret.Get(0).(func(context.Context, string) string); ok {
		r0 = rf(ctx, clientIP)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, clientIP)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewCountryDetector interface {
	mock.TestingT
	Cleanup(func())
}

// NewCountryDetector creates a new instance of CountryDetector. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCountryDetector(t mockConstructorTestingTNewCountryDetector) *CountryDetector {
	mock := &CountryDetector{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
